// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let verifier = artifacts.require('Verifier');
let proof = require('../../zokrates/code/square/proof.json');

contract('Verifier', accounts => {
    let account = accounts[0];

    describe('verification', async () => {
        beforeEach(async () => { 
            this.contract = await verifier.new({from: account});
        })

        // Test verification with correct proof
        // - use the contents from proof.json generated from zokrates steps    
        it('correct proof', async() => {
            let result = await this.contract.verifyTx.call(
                proof.proof.a,
                proof.proof.b,
                proof.proof.c,
                proof.inputs
            );
            assert.equal(result, true, "result should be true with correct proof");
        });

        // Test verification with incorrect proof
        it('incorrect proof', async() => {
            let result = await this.contract.verifyTx.call(
                proof.proof.a,
                proof.proof.b,
                proof.proof.c,
                [1,1]
            );
            assert.equal(result, false, "result shoud be false with in correct proof input");
        })
    })
})

